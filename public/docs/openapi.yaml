openapi: 3.0.3
info:
  title: 'Laravel API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://calabozos.test'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: '|]|{+-'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/calabozos/classes:
    get:
      summary: 'Retrieve and synchronize all character classes from the API.'
      operationId: retrieveAndSynchronizeAllCharacterClassesFromTheAPI
      description: "This endpoint fetches all classes from the external API and ensures\nthey are stored in the local database through the ClassService."
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/calabozos/classes/{index}':
    get:
      summary: 'Retrieve a specific character class by its index identifier.'
      operationId: retrieveASpecificCharacterClassByItsIndexIdentifier
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: index
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/calabozos/classes/{index}/spellcasting':
    get:
      summary: 'Retrieve spellcasting information for a specific character class.'
      operationId: retrieveSpellcastingInformationForASpecificCharacterClass
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: index
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/calabozos/classes/{index}/multiclassing':
    get:
      summary: 'Retrieve multiclassing information for a specific character class.'
      operationId: retrieveMulticlassingInformationForASpecificCharacterClass
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: index
        description: ''
        example: architecto
        required: true
        schema:
          type: string
